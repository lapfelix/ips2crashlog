name: Swift CI

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    if: "!startsWith(github.ref, 'refs/tags/')"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: swift build -v
      - name: Run tests
        run: swift test -v

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Build Release
        run: swift build -c release -v
      - name: Archive product
        run: zip -r -j release.zip .build/release/ips2crashlog
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Release created on ${{ github.event.head_commit.timestamp }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip

  linux-build:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Swift
        uses: fwal/setup-swift@v1
        with:
          swift-version: '5.7'
      - name: Build
        run: swift build -v
      - name: Run tests
        run: swift test -v
      - name: Archive product
        run: zip -r -j release-linux.zip .build/release/ips2crashlog
      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-linux
          path: ./release-linux.zip
